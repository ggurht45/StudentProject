gesture1Left, dataOutput/General/2017-08-10 01-50-09.hand, c1, Yes, AngleScore: 0.8203290023217176, ComponentsScore: 0.7569646730021217
gesture2Left, dataOutput/General/2017-08-10 01-50-31.hand, c2, Yes, AngleScore: 0.8712535685344976, ComponentsScore: 0.7776881890212921
gesture3Left, dataOutput/General/2017-08-10 01-50-41.hand, c3, Yes, AngleScore: 0.8925040703641773, ComponentsScore: 0.8128360242758357
gesture4Left, dataOutput/General/2017-08-10 01-50-55.hand, c4, Yes, AngleScore: 0.8664849186848027, ComponentsScore: 0.7149363046031648
gesture5Left, dataOutput/General/2017-08-10 01-51-08.hand, c5, Yes, AngleScore: 0.9333810521103175, ComponentsScore: 0.7544349746761736
gesture6Left, dataOutput/General/2017-08-10 01-51-44.hand, c6, Yes, AngleScore: 0.7785164679391239, ComponentsScore: 0.7636324458641316
gesture7Left, dataOutput/General/2017-08-10 01-51-54.hand, c7, Yes, AngleScore: 0.7400574784525709, ComponentsScore: 0.4978084684697649
gesture8Left, dataOutput/General/2017-08-10 01-52-05.hand, c8, Yes, AngleScore: 0.8631781992035149, ComponentsScore: 0.7209857278247112
gesture9Left, dataOutput/General/2017-08-10 01-52-19.hand, c9, Yes, AngleScore: 0.9482467130434669, ComponentsScore: 0.6777038198744911
gesture10Left, dataOutput/General/2017-08-10 01-52-39.hand, c10, Yes, AngleScore: 0.8873437111181551, ComponentsScore: 0.6456650084255733
gesture1Right, dataOutput/General/2017-08-10 01-53-51.hand, c1, Yes, AngleScore: 0.7550794669228298, ComponentsScore: 0.6123431842956891
gesture2Right, dataOutput/General/2017-08-10 01-54-00.hand, c2, Yes, AngleScore: 0.8794131878059528, ComponentsScore: 0.7483227248074134
gesture3Right, dataOutput/General/2017-08-10 01-54-13.hand, c3, Yes, AngleScore: 0.9608538605912145, ComponentsScore: 0.6990829783423147
gesture4Right, dataOutput/General/2017-08-10 01-54-22.hand, c4, Yes, AngleScore: 0.8650740299112639, ComponentsScore: 0.765917161674077
gesture5Right, dataOutput/General/2017-08-10 01-54-43.hand, c5, Yes, AngleScore: 0.8901956809659859, ComponentsScore: 0.8155590762487691
gesture6Right, dataOutput/General/2017-08-10 01-55-24.hand, c6, Yes, AngleScore: 0.8986107128604334, ComponentsScore: 0.7960509935660612
gesture7Right, dataOutput/General/2017-08-10 01-55-44.hand, c7, Yes, AngleScore: 0.8632189070487806, ComponentsScore: 0.7524318815552308
gesture8Right, dataOutput/General/2017-08-10 01-56-06.hand, c8, Yes, AngleScore: 0.8445471357868508, ComponentsScore: 0.6692820029558857
gesture9Right, dataOutput/General/2017-08-10 01-56-25.hand, c9, Yes, AngleScore: 0.9342390981280769, ComponentsScore: 0.782873219137229
gesture10Right, dataOutput/General/2017-08-10 01-56-34.hand, c10, Yes, AngleScore: 0.6953531672955594, ComponentsScore: 0.6705453529271305


gesture1Left, dataOutput/General/2017-08-10 01-50-09.hand, c1, Yes, AngleScore: 0.8203290023217176, ComponentsScore: 0.7569646730021217
gesture2Left, dataOutput/General/2017-08-10 01-50-31.hand, c2, Yes, AngleScore: 0.8712535685344976, ComponentsScore: 0.7948108565514845
gesture3Left, dataOutput/General/2017-08-10 01-50-41.hand, c3, Yes, AngleScore: 0.8925040703641773, ComponentsScore: 0.8216931065010403
gesture4Left, dataOutput/General/2017-08-10 01-50-55.hand, c4, Yes, AngleScore: 0.8664849186848027, ComponentsScore: 0.7149363046031648
gesture5Left, dataOutput/General/2017-08-10 01-51-08.hand, c5, Yes, AngleScore: 0.9333810521103175, ComponentsScore: 0.7622077361808789
gesture6Left, dataOutput/General/2017-08-10 01-51-44.hand, c6, Yes, AngleScore: 0.7785164679391239, ComponentsScore: 0.7779667709356434
gesture7Left, dataOutput/General/2017-08-10 01-51-54.hand, c7, Yes, AngleScore: 0.7400574784525709, ComponentsScore: 0.5195896227027956
gesture8Left, dataOutput/General/2017-08-10 01-52-05.hand, c8, Yes, AngleScore: 0.8631781992035149, ComponentsScore: 0.7285088686432111
gesture9Left, dataOutput/General/2017-08-10 01-52-19.hand, c9, Yes, AngleScore: 0.9482467130434669, ComponentsScore: 0.7012656312463018
gesture10Left, dataOutput/General/2017-08-10 01-52-39.hand, c10, Yes, AngleScore: 0.8873437111181551, ComponentsScore: 0.664724022317575
gesture1Right, dataOutput/General/2017-08-10 01-53-51.hand, c1, Yes, AngleScore: 0.7550794669228298, ComponentsScore: 0.6123431842956891
gesture2Right, dataOutput/General/2017-08-10 01-54-00.hand, c2, Yes, AngleScore: 0.8794131878059528, ComponentsScore: 0.7658694243926915
gesture3Right, dataOutput/General/2017-08-10 01-54-13.hand, c3, Yes, AngleScore: 0.9608538605912145, ComponentsScore: 0.7215314733148088
gesture4Right, dataOutput/General/2017-08-10 01-54-22.hand, c4, Yes, AngleScore: 0.8650740299112639, ComponentsScore: 0.765917161674077
gesture5Right, dataOutput/General/2017-08-10 01-54-43.hand, c5, Yes, AngleScore: 0.8901956809659859, ComponentsScore: 0.8262546250099794
gesture6Right, dataOutput/General/2017-08-10 01-55-24.hand, c6, Yes, AngleScore: 0.8986107128604334, ComponentsScore: 0.8028537074807971
gesture7Right, dataOutput/General/2017-08-10 01-55-44.hand, c7, Yes, AngleScore: 0.8632189070487806, ComponentsScore: 0.7621677078801337
gesture8Right, dataOutput/General/2017-08-10 01-56-06.hand, c8, Yes, AngleScore: 0.8445471357868508, ComponentsScore: 0.6745988291772608
gesture9Right, dataOutput/General/2017-08-10 01-56-25.hand, c9, Yes, AngleScore: 0.9342390981280769, ComponentsScore: 0.7969020682872577
gesture10Right, dataOutput/General/2017-08-10 01-56-34.hand, c10, Yes, AngleScore: 0.6953531672955594, ComponentsScore: 0.6880597686747336
















--------------------------------------------normal facing up(1)
direction (rounded u.vec): (0.01, 0.72, -0.69)
d normalized: (0.01, 0.72, -0.69)
basis matrix:
(x-Basis): (-0.98, -0.13, -0.15)
(y-Basis): (-0.2, 0.68, 0.7)
(z-Basis): (-0.01, -0.72, 0.69)
(origin): (0, 0, 0)
palmNormal: (0.2, -0.68, -0.7)
pitch, yaw, roll in radians
pitch: 0.8044193
yaw: 0.009753936
roll(d): 3.1322029
roll(pn): 0.2868845
pitch, yaw, roll in degrees
pitch: 46.09
yaw: 0.56
roll(d): 179.46
roll(pn): 16.44
getProjection(pitch:yz; yaw:xz; roll:xy): YZ (0, 0.720412, -0.693514) mag (weight): 0.9999771
getProjection(pitch:yz; yaw:xz; roll:xy): XZ (0.0067647, 0, -0.693514) mag (weight): 0.69354683
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.0067647, 0.720412, 0) mag (weight): 0.7204433
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.200731, -0.680391, 0) mag (weight): 0.7093839
pitchWeighted: 46.09
yawWeighted: 31.97
rollWeighted (d): 33.21
rollWeighted (pn): -31.21
palmPosition: (-30.71, 124.11, 173.14)
stabilizedPalmPosition: (-31.43, 119.19, 176.38)
palmWidth: 88.46
wristPosition: (-39.17, 88.15, 211.4)
learning about pitch, roll yaw: vector =(-0, -0, -1) 	 pitch: -0.0 	 roll: -0.0 	 yaw: -0.0
-------------------------------------------- END
--------------------------------------------normal facing up(2)
direction (rounded u.vec): (0.08, 0.79, -0.61)
d normalized: (0.08, 0.79, -0.61)
basis matrix:
(x-Basis): (-0.92, -0.17, -0.34)
(y-Basis): (-0.38, 0.59, 0.72)
(z-Basis): (-0.08, -0.79, 0.61)
(origin): (0, 0, 0)
palmNormal: (0.38, -0.59, -0.72)
pitch, yaw, roll in radians
pitch: 0.9167006
yaw: 0.12659994
roll(d): 3.0443163
roll(pn): 0.5693862
pitch, yaw, roll in degrees
pitch: 52.52
yaw: 7.25
roll(d): 174.43
roll(pn): 32.62
getProjection(pitch:yz; yaw:xz; roll:xy): YZ (0, 0.791229, -0.606626) mag (weight): 0.9970148
getProjection(pitch:yz; yaw:xz; roll:xy): XZ (0.0772117, 0, -0.606626) mag (weight): 0.61151963
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.0772117, 0.791229, 0) mag (weight): 0.79498786
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.375553, -0.586708, 0) mag (weight): 0.6966105
pitchWeighted: 52.37
yawWeighted: 32.12
rollWeighted (d): 41.76
rollWeighted (pn): -27.36
palmPosition: (-37.02, 108.85, 17.37)
stabilizedPalmPosition: (-31.52, 106.88, 20.56)
palmWidth: 80.53
wristPosition: (-48.38, 72.12, 46.8)
learning about pitch, roll yaw: vector =(-0, -0, -1) 	 pitch: -0.0 	 roll: -0.0 	 yaw: -0.0
-------------------------------------------- END
--------------------------------------------facing down
direction (rounded u.vec): (0.05, -0.28, -0.96)
d normalized: (0.05, -0.28, -0.96)
basis matrix:
(x-Basis): (-0.98, -0.19, 0)
(y-Basis): (-0.18, 0.94, -0.29)
(z-Basis): (-0.05, 0.28, 0.96)
(origin): (0, 0, 0)
palmNormal: (0.18, -0.94, 0.29)
pitch, yaw, roll in radians
pitch: -0.28922155
yaw: 0.05520654
roll(d): 0.18362421
roll(pn): 0.19239147
pitch, yaw, roll in degrees
pitch: -16.57
yaw: 3.16
roll(d): 10.52
roll(pn): 11.02
getProjection(pitch:yz; yaw:xz; roll:xy): YZ (0, -0.284807, -0.957124) mag (weight): 0.9986002
getProjection(pitch:yz; yaw:xz; roll:xy): XZ (0.0528933, 0, -0.957124) mag (weight): 0.9585849
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.0528933, -0.284807, 0) mag (weight): 0.2896769
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.183009, -0.939468, 0) mag (weight): 0.9571276
pitchWeighted: -16.55
yawWeighted: -15.88
rollWeighted (d): -4.8
rollWeighted (pn): -102.54
palmPosition: (-19.28, 103.5, -8.01)
stabilizedPalmPosition: (-23.71, 107.11, -16.55)
palmWidth: 90.99
wristPosition: (-30.41, 121.49, 42.44)
learning about pitch, roll yaw: vector =(-0, -0, -1) 	 pitch: -0.0 	 roll: -0.0 	 yaw: -0.0
-------------------------------------------- END
--------------------------------------------facing down, fingers to right
direction (rounded u.vec): (0.98, 0.21, -0.08)
d normalized: (0.98, 0.21, -0.08)
basis matrix:
(x-Basis): (-0.07, -0.05, -1)
(y-Basis): (-0.21, 0.98, -0.03)
(z-Basis): (-0.98, -0.21, 0.08)
(origin): (0, 0, 0)
palmNormal: (0.21, -0.98, 0.03)
pitch, yaw, roll in radians
pitch: 1.1851473
yaw: 1.4855914
roll(d): 1.7781574
roll(pn): 0.210175
pitch, yaw, roll in degrees
pitch: 67.9
yaw: 85.12
roll(d): 101.88
roll(pn): 12.04
getProjection(pitch:yz; yaw:xz; roll:xy): YZ (0, 0.205163, -0.0832915) mag (weight): 0.22142547
getProjection(pitch:yz; yaw:xz; roll:xy): XZ (0.975177, 0, -0.0832915) mag (weight): 0.9787279
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.975177, 0.205163, 0) mag (weight): 0.9965252
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.208513, -0.977441, 0) mag (weight): 0.9994338
pitchWeighted: 15.04
yawWeighted: 66.46
rollWeighted (d): 67.67
rollWeighted (pn): -91.92
palmPosition: (-5.33, 112.26, -29.09)
stabilizedPalmPosition: (-11.49, 112.81, -34.71)
palmWidth: 90.99
wristPosition: (-59.46, 105.02, -32.33)
learning about pitch, roll yaw: vector =(-0, -0, -1) 	 pitch: -0.0 	 roll: -0.0 	 yaw: -0.0
-------------------------------------------- END
** special pitch calculations **
dir: (0.975177, 0.205163, -0.0832915) 	 prjYZ: (0, 0.205163, -0.0832915)
 p(radians): 1.1851473 	 (deg): 67.9039375583259
negZAxis: (-0, -0, -1) 	 angBtw(-z, proj): 1.1851473 	 angBtw(deg): 67.9039375583259
dMagnitude: 1.0 	 projMag0.22142547
angW (rad): 0.2624218 	 angW (deg): 15.035660835069665 	 convertDeg 1st: 15.035662
*** End special ***
--------------------------------------------right hand palm upright
direction (rounded u.vec): (-0.13, 0.68, -0.72)
d normalized: (-0.13, 0.68, -0.72)
basis matrix:
(x-Basis): (0.95, -0.13, -0.29)
(y-Basis): (0.29, 0.72, 0.63)
(z-Basis): (0.13, -0.68, 0.72)
(origin): (0, 0, 0)
palmNormal: (-0.29, -0.72, -0.63)
pitch, yaw, roll in radians
pitch: 0.7600175
yaw: -0.17312974
roll(d): -2.9596367
roll(pn): -0.37999812
pitch, yaw, roll in degrees
pitch: 43.55
yaw: -9.92
roll(d): -169.57
roll(pn): -21.77
getProjection(pitch:yz; yaw:xz; roll:xy): YZ (0, 0.683465, -0.71907) mag (weight): 0.9920618
getProjection(pitch:yz; yaw:xz; roll:xy): XZ (-0.125751, 0, -0.71907) mag (weight): 0.7299831
getProjection(pitch:yz; yaw:xz; roll:xy): XY (-0.125751, 0.683465, 0) mag (weight): 0.6949375
getProjection(pitch:yz; yaw:xz; roll:xy): XY (-0.287127, -0.718876, 0) mag (weight): 0.77409613
pitchWeighted: 43.2
yawWeighted: 31.79
rollWeighted (d): 30.26
rollWeighted (pn): -37.65
palmPosition: (-5.34, 115.82, 22.1)
stabilizedPalmPosition: (-12.65, 115.17, 20.35)
palmWidth: 86.15
wristPosition: (9.12, 82.9, 59.38)
learning about pitch, roll yaw: vector =(-0, -0, -1) 	 pitch: -0.0 	 roll: -0.0 	 yaw: -0.0
-------------------------------------------- END
--------------------------------------------facing down 2
direction (rounded u.vec): (0.03, -0.02, -1)
d normalized: (0.03, -0.02, -1)
basis matrix:
(x-Basis): (-1, -0.08, -0.03)
(y-Basis): (-0.08, 1, -0.02)
(z-Basis): (-0.03, 0.02, 1)
(origin): (0, 0, 0)
palmNormal: (0.08, -1, 0.02)
pitch, yaw, roll in radians
pitch: -0.018305246
yaw: 0.028189935
roll(d): 0.9949454
roll(pn): 0.08116785
pitch, yaw, roll in degrees
pitch: -1.05
yaw: 1.62
roll(d): 57.01
roll(pn): 4.65
getProjection(pitch:yz; yaw:xz; roll:xy): YZ (0, -0.018297, -0.999435) mag (weight): 0.99960285
getProjection(pitch:yz; yaw:xz; roll:xy): XZ (0.0281815, 0, -0.999435) mag (weight): 0.9998326
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.0281815, -0.018297, 0) mag (weight): 0.03360022
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.0810617, -0.996498, 0) mag (weight): 0.99978924
pitchWeighted: -1.05
yawWeighted: -1.05
rollWeighted (d): -0.04
rollWeighted (pn): -91.16
palmPosition: (-18.04, 188.96, -46.94)
stabilizedPalmPosition: (-18.75, 191.5, -46.67)
palmWidth: 78.63
wristPosition: (-26.23, 192.99, -0.55)
learning about pitch, roll yaw: vector =(-0, -0, -1) 	 pitch: -0.0 	 roll: -0.0 	 yaw: -0.0
-------------------------------------------- END








------------- Positive Y Axis (lmotion) Orientation Info -------------
Positive Y Axis (lmotion) vector: 	 (0, 1, 0)
pitch: 	90.0 	1.57radians
roll: 	180.0 	3.14
yaw: 	180.0 	3.14
------------- End -------------
------------- Target Hand Direction Orientation Info -------------
Target Hand Direction vector: 	 (0.0772117, 0.791229, -0.606625)
//Special note: dont erase!
pitch is calculated via projection onto the y-z plane. (0.791229, -0.606625) (y,z). slope of this vector = 1.3 .big slope .arctan Opp/adj -> .91 radians.
pitch: 	52.52 	0.92radians
roll: 	174.43 	3.04
yaw: 	7.25 	0.13
------------- End -------------
------------- Loaded Hand Direction Orientation Info -------------
Loaded Hand Direction vector: 	 (0.975177, 0.205163, -0.0832915)
//Special note: dont erase!
pitch is calculated via projection onto the y-z plane. (0.205163, -0.0832915) (y,z). slope of this vector = 2.46 .big slope -> arctan -> 1.19 radians checks out
pitch: 	67.9 	1.19radians -> mks.
roll: 	101.88 	1.78
yaw: 	85.12 	1.49
------------- End -------------


//right hand real data
getProjection(pitch:yz; yaw:xz; roll:xy): YZ (0, 0.205163, -0.0832915) mag (weight): 0.22142547 --> Pitch
getProjection(pitch:yz; yaw:xz; roll:xy): XZ (0.975177, 0, -0.0832915) mag (weight): 0.9787279 --> yaw
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.975177, 0.205163, 0) mag (weight): 0.9965252
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.208513, -0.977441, 0) mag (weight): 0.9994338 --> roll

multiply mags by 90:
p-> 20
y -> 88
r -> 90
--test passes for right hand.
double r = 88;  //around z
double p_moreLikeYaw = -90; //rotation around x axis --> seems to be around y... --> nope here, it seems to be around x axix? check again to make sure... nono i was wrong. it does seem to be around y. looking like  a good sign ^^.
double y_moreLikePitch = 20;  //around y --> seems to be around x... --> here it seems to be around y. check again to make sure.












//hand facing down real data
getProjection(pitch:yz; yaw:xz; roll:xy): YZ (0, -0.284807, -0.957124) mag (weight): 0.9986002 --> Pitch
getProjection(pitch:yz; yaw:xz; roll:xy): XZ (0.0528933, 0, -0.957124) mag (weight): 0.9585849 --> yaw
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.0528933, -0.284807, 0) mag (weight): 0.2896769
getProjection(pitch:yz; yaw:xz; roll:xy): XY (0.183009, -0.939468, 0) mag (weight): 0.9571276   --> roll
more info
direction (rounded u.vec): (0.05, -0.28, -0.96)
palmNormal: (0.18, -0.94, 0.29)
pitch, yaw, roll in radians
pitch: -0.28922155
yaw: 0.05520654
roll(d): 0.18362421
roll(pn): 0.19239147
pitch, yaw, roll in degrees
pitch: -16.57
yaw: 3.16
roll(d): 10.52
roll(pn): 11.02

multiply mags by 90:
p-> 90
y -> 86
r -> 86

double r = 86;  //around z
double p_moreLikeYaw = -86; //rotation around x axis --> seems to be around y... --> nope here, it seems to be around x axix? check again to make sure... nono i was wrong. it does seem to be around y. looking like  a good sign ^^.
double y_moreLikePitch = 90;  //around y --> seems to be around x... --> here it seems to be around y. check again to make sure.

--hm test didnt pass as i thought.
to many 90s.
what i need to do is just have pitch up. how can i learn that from the data
pitch mag weight is high and yaw is too D high party

(the original pitch needs to be multiplied by the % on the z axis.)
pitch angle is too heck low. --remember Luke. trying to hit 90 for pitch, we are
p -> .96 * (90- (-16.57))                --direction weight from -zAxis(lm) * (total angle to move upwards)

think about roll soon. its tricky. imagine left hand handshake position. maybe it needs no weight. hmm. need to think more.
r -> 0.05 * (                            --direction weight from xAxis(lm) * (total angle to move upwards)


y -> 0.28 *                              --direction weight from -zAxis(lm) * (total angle to move upwards)